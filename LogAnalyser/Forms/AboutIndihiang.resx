<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QBeRXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAAAqAAAALAAAAABVTklDT0RFAABDAHIAZQBhAHQAZQBkACAAdwBpAHQAaAAgAEcASQBNAFD/2wBD
        AAUDBAQEAwUEBAQFBQUGBwwIBwcHBw8LCwkMEQ8SEhEPERETFhwXExQaFRERGCEYGh0dHx8fExciJCIe
        JBweHx7/2wBDAQUFBQcGBw4ICA4eFBEUHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e
        Hh4eHh4eHh4eHh4eHh7/wAARCAEsAJYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDp
        sUuKl20ba/DuU5SLbSYqXbRto5QI8UYqTbRto5QIsUbal20baOUCLFGDUu2jbRygRYowal20baOUCLBo
        21Lto20coEWKMVLto20coEWKMVLto20coEWDRUu2ijlAm20bal20ba6OUCLbRtqXbRto5QIttG2pdtG2
        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
        2Q==
</value>
  </data>
</root>